{"version":3,"sources":["timer/timer.module.css","timer/index.js","timer/timer.jsx","App.js","index.js"],"names":["module","exports","Timer","useState","time","setTime","status","setStatus","onWait$","Subject","pipe","buffer","debounceTime","map","item","length","filter","subscribe","useEffect","timer$","Observable","observer","startTimer","setInterval","next","clearInterval","error","console","log","complete","subscription","unsubscribe","timeData","seconds","minutes","Math","floor","hours","className","styles","container","timerDisplay","String","padStart","btnWrapper","startBtn","onClick","resetBtn","waitBtn","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,0BAA0B,aAAe,4BAA4B,SAAW,wBAAwB,SAAW,wBAAwB,QAAU,yB,oNCC1MC,ECGD,WACV,MAAwBC,mBAAU,GAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KAkBMC,EAAU,IAAIC,IAEpBD,EAAQE,KACJC,YAAOH,EAAQE,KAAKE,YAAa,OACjCC,aAAI,SAAAC,GAAI,OAAIA,EAAKC,UACjBC,aAAO,SAAAF,GAAI,OAAa,IAATA,MACjBG,WAAU,WACRV,EAAU,WAGdW,qBAAU,WACN,GAAe,UAAXZ,EAAoB,CACpB,IAAMa,EAAS,IAAIC,KAAW,SAACC,GAC3B,IAAMC,EAAaC,aAAY,WAC3BF,EAASG,SACV,KAEH,OAAO,WACHC,cAAcH,OAGhBD,EAAW,CACbG,KAAM,WACFnB,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAE7BsB,MAAO,WACHC,QAAQC,IAAI,UAEhBC,SAAU,WACNF,QAAQC,IAAI,uBAGdE,EAAeX,EAAOF,UAAUI,GACtC,OAAQ,WACJS,EAAaC,eAGN,UAAXzB,GACAC,EAAU,WAEf,CAACD,IAEJ,IAAM0B,EAAW,CACbC,QAAU7B,EAAK,GACf8B,QAASC,KAAKC,MAAMhC,EAAK,IACzBiC,MAAOF,KAAKC,MAAMhC,EAAK,OAG3B,OACI,sBAAKkC,UAAWC,IAAOC,UAAvB,UACI,sBAAKF,UAAWC,IAAOE,aAAvB,UAAsCC,OAAOV,EAASK,OAAOM,SAAS,EAAG,KAAzE,MAAkFD,OAAOV,EAASE,SAASS,SAAS,EAAG,KAAvH,MAAgID,OAAOV,EAASC,SAASU,SAAS,EAAG,QACrK,sBAAKL,UAAWC,IAAOK,WAAvB,UACI,wBAAQN,UAAWC,IAAOM,SAAUC,QAAkB,UAATxC,EA5DtC,WACfC,EAAU,QACVF,EAAQ,IAVQ,WAChBE,EAAU,UAmEF,SAAoG,UAATD,EAAA,iBAC3F,wBAAQgC,UAAWC,IAAOQ,SAAUD,QAlE5B,WACD,UAAXxC,GACAC,EAAU,SACdF,EAAQ,IA+DA,mBACA,wBAAQiC,UAAWC,IAAOS,QAASF,QA1D5B,WACftC,EAAQgB,QAyDA,yBClEDyB,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCHNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f97426ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timer_container__2g6cK\",\"btnWrapper\":\"timer_btnWrapper__2Y3jL\",\"timerDisplay\":\"timer_timerDisplay__2wrHe\",\"startBtn\":\"timer_startBtn__1sjLx\",\"resetBtn\":\"timer_resetBtn__3VGIo\",\"waitBtn\":\"timer_waitBtn__1w4cM\"};","import Timer from './timer'\r\n\r\nexport default Timer","import { useEffect, useState } from \"react\";\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { buffer, map, filter, debounceTime } from 'rxjs/operators'\r\nimport styles from './timer.module.css'\r\n\r\nconst Timer = () => {\r\n    const [time, setTime] = useState (0)\r\n    const [status, setStatus] = useState('stop');\r\n\r\n    const handleStart = () => {\r\n        setStatus('start');\r\n    }\r\n    const handleReset = () => {\r\n        if (status === 'start')\r\n            setStatus('reset');\r\n        setTime(0);\r\n    }\r\n    const handleStop = () => {\r\n        setStatus('stop');\r\n        setTime(0);\r\n    }\r\n    const handleWait = () => {\r\n        onWait$.next();\r\n    }\r\n\r\n    const onWait$ = new Subject()\r\n\r\n    onWait$.pipe(\r\n        buffer(onWait$.pipe(debounceTime(300))),\r\n        map(item => item.length),\r\n        filter(item => item === 2),\r\n    ).subscribe(() => {\r\n        setStatus('wait');\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (status === 'start') {\r\n            const timer$ = new Observable((observer) => {\r\n                const startTimer = setInterval(() => {\r\n                    observer.next();\r\n                }, 1000);\r\n\r\n                return () => {\r\n                    clearInterval(startTimer);\r\n                };\r\n            });\r\n            const observer = {\r\n                next: () => {\r\n                    setTime((time) => time + 1)\r\n                },\r\n                error: () => {\r\n                    console.log('error')\r\n                },\r\n                complete: () => {\r\n                    console.log('observer complete')\r\n                }\r\n            };\r\n            const subscription = timer$.subscribe(observer);\r\n            return (() => {\r\n                subscription.unsubscribe();\r\n            })\r\n        }\r\n        if (status === 'reset') {\r\n            setStatus('start');\r\n        }\r\n    }, [status])\r\n\r\n    const timeData = {\r\n        seconds: (time%60),\r\n        minutes: Math.floor(time/60),\r\n        hours: Math.floor(time/3600),\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.timerDisplay}>{String(timeData.hours).padStart(2, \"0\")} : {String(timeData.minutes).padStart(2, \"0\")} : {String(timeData.seconds).padStart(2, \"0\")}</div>\r\n            <div className={styles.btnWrapper}>\r\n                <button className={styles.startBtn} onClick={status==='start' ? handleStop : handleStart}>{status==='start' ? `stop` : `start`}</button>\r\n                <button className={styles.resetBtn} onClick={handleReset}>reset</button>\r\n                <button className={styles.waitBtn} onClick={handleWait}>wait</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer","\nimport './App.css';\n\nimport Timer from './timer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}